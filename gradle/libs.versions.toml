[versions]
calcite = "1.36.0"
clikt = "3.5.2"
commons-math3 = "3.6.1"
dokka = "1.9.10"
gradle-node = "3.5.1"
hadoop = "3.3.6"
hypersistence-utils = "3.7.3"
jackson = "2.16.1"
jandex-gradle = "1.1.0"
java = "19"
jline = "3.25.1"
jmh-gradle = "0.7.0"
jakarta = "3.0.2"
junit-jupiter = "5.10.2"
kotlin = "1.9.22"
kotlin-logging = "3.0.5"
kotlinx-coroutines = "1.8.0"
log4j = "2.23.0"
microprofile-openapi = "3.1"
microprofile-config = "3.1"
mockk = "1.13.9"
node = "18.15.0"
parquet = "1.13.1"
progressbar = "0.10.0"
quarkus = "3.8.0"
sentry = "7.4.0"
slf4j = "2.0.7"
spotless = "6.25.0"

[libraries]
# Kotlin
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

# Logging
#kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
sentry-log4j2 = { module = "io.sentry:sentry-log4j2", version.ref = "sentry" }

# Testing
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# CLI
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
progressbar = { module = "me.tongfei:progressbar", version.ref = "progressbar" }

# Format
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-dataformat-csv = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv", version.ref = "jackson" }
parquet = { module = "org.apache.parquet:parquet-hadoop", version.ref = "parquet" }

# Quarkus
quarkus-gradle-application = { module = "io.quarkus:gradle-application-plugin", version.ref = "quarkus" }
quarkus-gradle-extension = { module = "io.quarkus.extension:gradle-extension-plugin", version.ref = "quarkus" }
quarkus-bom = { module = "io.quarkus:quarkus-bom", version.ref = "quarkus" }
quarkus-kotlin = { module = "io.quarkus:quarkus-kotlin" }
quarkus-core-runtime = { module = "io.quarkus:quarkus-core", version.ref = "quarkus" }
quarkus-core-deployment = { module = "io.quarkus:quarkus-core-deployment" }
quarkus-vertx-http-runtime = { module = "io.quarkus:quarkus-vertx-http" }
quarkus-vertx-http-deployment = { module = "io.quarkus:quarkus-vertx-http-deployment" }
quarkus-arc-runtime = { module = "io.quarkus:quarkus-arc" }
quarkus-arc-deployment = { module = "io.quarkus:quarkus-arc-deployment" }
quarkus-resteasy-core = { module = "io.quarkus:quarkus-resteasy" }
quarkus-resteasy-jackson = { module = "io.quarkus:quarkus-resteasy-jackson" }
quarkus-smallrye-openapi = { module = "io.quarkus:quarkus-smallrye-openapi" }
quarkus-security = { module = "io.quarkus:quarkus-security" }
quarkus-oidc = { module = "io.quarkus:quarkus-oidc" }
quarkus-hibernate-orm-core = { module = "io.quarkus:quarkus-hibernate-orm" }
quarkus-hibernate-orm-panache = { module = "io.quarkus:quarkus-hibernate-orm-panache" }
quarkus-hibernate-validator = { module = "io.quarkus:quarkus-hibernate-validator" }
quarkus-jdbc-h2 = { module = "io.quarkus:quarkus-jdbc-h2" }
quarkus-jdbc-postgresql = { module = "io.quarkus:quarkus-jdbc-postgresql" }
quarkus-flyway = { module = "io.quarkus:quarkus-flyway" }
hypersistence-utils-hibernate = { module = "io.hypersistence:hypersistence-utils-hibernate-60", version.ref = "hypersistence-utils" }

# Quarkus (Testing)
quarkus-junit5-core = { module = "io.quarkus:quarkus-junit5" }
quarkus-jacoco = { module = "io.quarkus:quarkus-jacoco" }
quarkus-panache-mock = { module = "io.quarkus:quarkus-panache-mock" }
quarkus-test-security = { module = "io.quarkus:quarkus-test-security" }
restassured-core = { module = "io.rest-assured:rest-assured" }

# Calcite (SQL)
calcite-core = { module = "org.apache.calcite:calcite-core", version.ref = "calcite" }
jline = { module = "org.jline:jline", version.ref = "jline" }

# Other
jakarta-validation = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta" }
jakarta-ws-rs = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "jakarta" }
hadoop-common = { module = "org.apache.hadoop:hadoop-common", version.ref = "hadoop" }
hadoop-mapreduce-client-core = { module = "org.apache.hadoop:hadoop-mapreduce-client-core", version.ref = "hadoop" }
commons-math3 = { module = "org.apache.commons:commons-math3", version.ref = "commons-math3" }
microprofile-openapi-api = { module = "org.eclipse.microprofile.openapi:microprofile-openapi-api", version.ref = "microprofile-openapi" }
microprofile-config = { module = "org.eclipse.microprofile.config:microprofile-config-api", version.ref = "microprofile-config" }

# Other (Build)
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
gradle-node = { module = "com.github.node-gradle:gradle-node-plugin", version.ref = "gradle-node" }
jandex-gradle = { module = "org.kordamp.gradle:jandex-gradle-plugin", version.ref = "jandex-gradle" }
jmh-gradle = { module = "me.champeau.jmh:jmh-gradle-plugin", version.ref = "jmh-gradle" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
